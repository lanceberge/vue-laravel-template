#!/bin/bash
set -e

PROJ_NAME=APP_NAME_PLACEHOLDER
DOMAIN_NAME=APP_URL_PLACEHOLDER
REPO_NAME=REPO_NAME_PLACEHOLDER

yum install docker -y
service docker start
usermod -a -G docker ec2-user

sudo yum install sqlite sqlite-devel sqlite-tools

yum install nginx -y
mkdir -p /etc/nginx/sites-enabled
ln -s "/home/ec2-user/$PROJ_NAME/nginx/nginx.conf" /etc/nginx/sites-enabled/"$PROJ_NAME"

sudo cat <<'EOF' >/etc/nginx/nginx.conf
worker_processes 1;
events {
    worker_connections 1024;
}
http {
    include mime.types;
    include /etc/nginx/sites-enabled/*;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
}
EOF

systemctl start nginx
systemctl enable nginx

curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose

chmod +x /usr/local/bin/docker-compose

echo "set -o vi" >>~/.bashrc
/bin/bash -c "$(curl -fsSL https://php.new/install/linux/8.3)"
source ~/.bashrc

composer install

cp .env.example .env
sed -i 's/APP_ENV=local/APP_ENV=production/' .env
sed -i 's/APP_DEBUG=true/APP_DEBUG=false/' .env

php aritsan key:generate
php artisan migrate

yum install certbot python3-certbot-nginx -y
certbot --nginx -d "$DOMAIN_NAME" -d "www.$DOMAIN_NAME"
git add nginx/nginx.conf
git commit -m "add nginx certs"
git push -u origin main
